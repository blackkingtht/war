using Assets.Scripts.InGameUI;
using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

public class SkillCtrl : MonoBehaviour {

    private Dictionary<int, Skill> skills = new Dictionary<int, Skill>();
    private GameObject last_selected_skill = null;
    public AudioClip clickSkill;
    private AudioSource audioSource;

    // Use this for initialization
    void Start()
    {
        audioSource = this.GetComponent<AudioSource>();
        //事件
        UIDispacher.Instance.AddEventListener("ClickSkill", ClickSkill);
        UIDispacher.Instance.AddEventListener("StayOnSkill", StayOnSkill);
        UIDispacher.Instance.AddEventListener("ExitSkill", ExitSkill);

        InitSkills();
        LoadSkills();
    }


    public void OnDestroy()
    {
        UIDispacher.Instance.RemoveEventListener("ClickSkill", ClickSkill);
        UIDispacher.Instance.RemoveEventListener("StayOnSkill", StayOnSkill);
        UIDispacher.Instance.RemoveEventListener("ExitSkill", ExitSkill);
    }

    /// <summary>
    /// 技能初始化
    /// </summary>
    private void InitSkills()
    {
        //技能1

        Skill skill1 = new Skill();
        skill1.SkillEnum = SkillEnum.SpeedUp;
        skill1.Name = Constant.skill_1_Name;
        skill1.Img = Resources.Load(Constant.skill_1_ImgPath, typeof(Sprite)) as Sprite;
        skill1.Info = Constant.skill_1_Info;
        skills.Add(1, skill1);

        //技能2
        Skill skill2 = new Skill();
        skill2.SkillEnum = SkillEnum.Stop;
        skill2.Name = Constant.skill_2_Name;
        skill2.Img = Resources.Load(Constant.skill_2_ImgPath, typeof(Sprite)) as Sprite;
        skill2.Info = Constant.skill_2_Info;
        skills.Add(2, skill2);
    }

    /// <summary>
    /// 加载技能
    /// </summary>
    private void LoadSkills()
    {
        GameObject[] _skills = GameObject.FindGameObjectsWithTag("SKILL");
        int i = 1;
        foreach(GameObject _skill in _skills)
        {
            SkillView skillView = _skill.GetComponent<SkillView>();
            Skill skill_temp = null;
            if (skills.TryGetValue(i, out skill_temp) == true)
            {
                skillView.skill_img.sprite = skill_temp.Img;
                skillView.skill_name.text = skill_temp.Name;
                skillView.skill_info_text.text = skill_temp.Info;
                skillView.skillEnum = skill_temp.SkillEnum;
            }
            i++;
        }
    }

    private void ClickSkill(object param)
    {
        Debug.Log("使用技能");
        GameObject skillGameObject = (GameObject)param;
        SkillView skill=skillGameObject.GetComponent<SkillView>();
        //判断技能是否处于冷却中。

        //如果不在冷却中
        var message = new mmopb.useSkill_req
        {
            skillType = Convert.ToInt32(skill.skillEnum)
        };
        ClientNet.Instance.Send(ProtoBuf.ProtoHelper.EncodeWithName(message));
    }

    private void StayOnSkill(object param)
    {
        GameObject skill = (GameObject)param;
        SkillView skillView = skill.GetComponent<SkillView>();
        skillView.skill_info.SetActive(true);
    }

    private void ExitSkill(object param)
    {
        GameObject skill = (GameObject)param;
        SkillView skillView = skill.GetComponent<SkillView>();
        skillView.skill_info.SetActive(false);
    }
}
